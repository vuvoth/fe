initSidebarItems({"enum":[["Class","A `Class` is an item that can have member functions."],["DepLocality","[`DepGraph`] edge label. “Locality” refers to the deployed state; `Local` dependencies are those that will be compiled together, while `External` dependencies will only be reachable via an evm CALL* op."],["IngotMode",""],["Item","A named item. This does not include things inside of a function body."],["MemberFunction",""],["ModuleSource",""],["TypeDef",""]],"fn":[["std_prelude_items",""],["walk_local_dependencies",""]],"struct":[["Contract",""],["ContractField",""],["ContractFieldId",""],["ContractId",""],["DepGraphWrapper",""],["Event",""],["EventId",""],["Function",""],["FunctionId",""],["Ingot","An `Ingot` is composed of a tree of `Module`s (set via [`AnalyzerDb::set_ingot_module_tree`]), and doesn’t have direct knowledge of files."],["IngotId",""],["Module",""],["ModuleConstant",""],["ModuleConstantId",""],["ModuleId","Id of a [`Module`], which corresponds to a single Fe source file. The lowering phase will create a separate `Module` & `ModuleId` for the lowered version of the Fe source code."],["Struct",""],["StructField",""],["StructFieldId",""],["StructId",""],["TypeAlias",""],["TypeAliasId",""]],"trait":[["DiagnosticSink",""]],"type":[["DepGraph",""]]});